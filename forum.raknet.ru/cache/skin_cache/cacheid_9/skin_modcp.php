<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 9               */
/* CACHE FILE: Generated: Sat, 01 Aug 2015 13:33:44 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_modcp_9 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['deletedPosts'] = array('post_data','disablelightbox','hasPosts');
$this->_funcHooks['deletedTopics'] = array('hastopics');
$this->_funcHooks['editUserForm'] = array('editusercfielddesc','custom_fields','displaynamehistory','modPreview','postingRestricted','suspended','hasRestrictions','groupCanStatus','editusercfields');
$this->_funcHooks['latestWarnLogs'] = array('warningloop','haswarnings');
$this->_funcHooks['memberLookup'] = array('canEditMember');
$this->_funcHooks['membersList'] = array('weAreSupmod','memberwarn','sendpm','blog','gallery','norep','posrep','negrep','repson','isnotbanned','isnotbanned2','members','showmembers');
$this->_funcHooks['membersModIPForm'] = array('modIpIe');
$this->_funcHooks['membersModIPFormMembers'] = array('ipMembers','modIPMembers');
$this->_funcHooks['membersModIPFormPosts'] = array('ipPosts','modFindMemberPosts');
$this->_funcHooks['modAnnounceForm'] = array('buttonlang','announceMessage','buttonlang');
$this->_funcHooks['modAnnouncements'] = array('announce_forums','notactive','notactive','announceHasForums','announceForum','announcements','hasAnnouncements');
$this->_funcHooks['modControls'] = array('fromprofile','fromprofile','isEditActive','issupermod','isWarnActive','isLogActive','isNotesActive','warnenabled','isEditPaneActive','issupermodpane','isWarnActive','isWarnActive','isWarnActive','warnenabledpane');
$this->_funcHooks['modcpMessage'] = array('hasMessage');
$this->_funcHooks['modCPpost'] = array('reputation','noRep','posRep','negRep','repIgnored','postMid','postMember','postAdmin','postIp','postIsHardDeleted','canSoftDelete','canHardDelete','hasDeletedReasonRow','hasDeletedReason','showReason','postDeletedReason','isDeleted','canEdit','approveUnapprove','approvePost','canDelete','reportedPostData','isUnapproved','postEditByReason','postEditBy','reportedPostData');
$this->_funcHooks['modCPtopic'] = array('haslastpage','pages','isLink','isLinkEnd','multipages','hasStarterId','isntLink','hasDeletedReason','showReason','topicDeletedReason','replylang','isntLink3','tidRestoreLink','canHardDeleteLinkFromDb','topicIsHardDeleted','tidRestore','canHardDeleteFromDb','isntLink4','canSoftDelete','canHardDelete','topics');
$this->_funcHooks['overview'] = array('canEditMember');
$this->_funcHooks['portalPage'] = array('tabs','accessRC');
$this->_funcHooks['subTabLoop'] = array('subTabs','isMainTab','findTab');
$this->_funcHooks['unapprovedPosts'] = array('post_data','disablelightbox','hasPosts');
$this->_funcHooks['unapprovedTopics'] = array('hastopics');
$this->_funcHooks['warn_view_log'] = array('warnlognote','warnlogcolor','warnlogpos','warnlogneg','warnlognochange','warnlogcustchange','warnlognotetype','logs','isAjaxModuleTitle','isAjaxModuleDivStart','warnlogentries','isAjaxModuleDivEnd');
$this->_funcHooks['warnForm'] = array('warnerrors','displaynamehistory','RepPositive','RepNegative','RepZero','reptext','repimage','warnreputation','warnnochange','addwarn','subwarn','warncustom','warncustomlevel','warnsupermod','modqueueposts','modqueuehours','modunitd','modunith','modqueueon','modqueue','postqueueposts','postqueuehours','postunitd','postunith','postqueueon','postqueue','bannedison','bannedhours','banunitd','banunith','banon','banqueue','unapproveposts','approveposts','disablepm');


}

/* -- deletedPosts --*/
function deletedPosts($posts, $other_data=array(), $pagelinks='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['deletedPosts'] ) )
{
$count_e1cafc97e1e7931816f7b0bb23fb88f7 = is_array($this->functionData['deletedPosts']) ? count($this->functionData['deletedPosts']) : 0;
$this->functionData['deletedPosts'][$count_e1cafc97e1e7931816f7b0bb23fb88f7]['posts'] = $posts;
$this->functionData['deletedPosts'][$count_e1cafc97e1e7931816f7b0bb23fb88f7]['other_data'] = $other_data;
$this->functionData['deletedPosts'][$count_e1cafc97e1e7931816f7b0bb23fb88f7]['pagelinks'] = $pagelinks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
" . ((!$this->settings['disable_lightbox']) ? ("
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
<script type='text/javascript'>
	ipb.topic.inSection	= 'topicview';
</script>
<style type='text/css'>
	.post_mod, .post_id { display: none; }
</style>
{$this->templateVars['test']}
<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	" . ((is_array( $posts ) AND count( $posts )) ? ("
		<div id='ips_Posts'>
			".$this->__f__5a6a450d64342484b4e8404988548bca($posts,$other_data,$pagelinks)."		</div>
	") : ("
		<div class='no_messages'>
			{$this->lang->words['no_deleted_posts']}
		</div>
	")) . "
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}


function __f__5a6a450d64342484b4e8404988548bca($posts, $other_data=array(), $pagelinks='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $posts as $post )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'modCPpost' ) ? $this->registry->getClass('output')->getTemplate('modcp')->modCPpost($post, array( 'sdData' => $other_data ), $post, 'deleted') : '' ) . "
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- deletedTopics --*/
function deletedTopics($topics, $sdelete=array(), $pagelinks='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['deletedTopics'] ) )
{
$count_dfef5e1098473a8d28c49991de102bf9 = is_array($this->functionData['deletedTopics']) ? count($this->functionData['deletedTopics']) : 0;
$this->functionData['deletedTopics'][$count_dfef5e1098473a8d28c49991de102bf9]['topics'] = $topics;
$this->functionData['deletedTopics'][$count_dfef5e1098473a8d28c49991de102bf9]['sdelete'] = $sdelete;
$this->functionData['deletedTopics'][$count_dfef5e1098473a8d28c49991de102bf9]['pagelinks'] = $pagelinks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("forums", "0" ) . "
<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	<table class='ipb_table topic_list' id='forum_table'>
		" . ((is_array( $topics ) AND count( $topics )) ? ("
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'modCPtopic' ) ? $this->registry->getClass('output')->getTemplate('modcp')->modCPtopic($topics, $pagelinks, 'deleted', $sdelete) : '' ) . "
		") : ("
			<tr> 
				<td colspan='3' class='no_messages'>{$this->lang->words['no_deleted_topics']}</td>
			</tr>
		")) . "
	</table>
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}

/* -- editUserForm --*/
function editUserForm($profile, $custom_fields=null) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['editUserForm'] ) )
{
$count_d151241f49020fc0f865baa75f9bea1a = is_array($this->functionData['editUserForm']) ? count($this->functionData['editUserForm']) : 0;
$this->functionData['editUserForm'][$count_d151241f49020fc0f865baa75f9bea1a]['profile'] = $profile;
$this->functionData['editUserForm'][$count_d151241f49020fc0f865baa75f9bea1a]['custom_fields'] = $custom_fields;
}
$IPBHTML .= "<form action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;do=doeditmember", "public",'' ), "", "" ) . "' method='post'>
<input type='hidden' name='auth_key' value='{$this->member->form_hash}' />
<input type='hidden' name='mid' value='{$profile['member_id']}' />
<input type=\"hidden\" name=\"_st\" value=\"{$this->request['_st']}\" />
<input type=\"hidden\" name=\"t\" value=\"{$this->request['t']}\" />
<input type=\"hidden\" name=\"pf\" value=\"{$this->request['pf']}\" />
<h2 class='ipsType_subtitle'>{$this->lang->words['cp_em_title']}: <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$profile['_parsedMember']['member_id']}", "public",'' ), "{$profile['_parsedMember']['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$profile['_parsedMember']['members_display_name']}</a></h2>
<div class='post_form general_box'>
<fieldset class='with_subhead'>
        <h3 class='bar'>{$this->lang->words['warn_member_details']}</h3>
        <h4>
            <img class=\"ipsUserPhoto ipsUserPhoto_large\" src='{$profile['_parsedMember']['pp_thumb_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$profile['_parsedMember']['members_display_name']) . "\" />
        </h4>
        <ul>
            <li class='field'>
                " . $this->registry->getClass('output')->getReplacement("find_topics_link") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$profile['_parsedMember']['member_id']}", "public",'' ), "", "" ) . "'>{$this->lang->words['gbl_find_my_content']}</a>
            </li>
            " . (($this->memberData['g_mem_info'] && $this->settings['auth_allow_dnames']) ? ("
                <li class='field' id='dname_history'>
                    " . $this->registry->getClass('output')->getReplacement("display_name") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=dname&amp;id={$profile['_parsedMember']['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_dname_history']}'>{$this->lang->words['display_history']}</a>
                </li>
            ") : ("")) . "
            <li class='field'>
                <img src='{$this->settings['img_url']}/warn.png' /> <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;member={$profile['_parsedMember']['member_id']}&amp;from_app=members", "public",'' ), "", "" ) . "' id='warn_link_xxx_{$profile['_parsedMember']['member_id']}' title='{$this->lang->words['warn_view_history']}'>" . sprintf( $this->lang->words['warn_status'], $profile['_parsedMember']['warn_level'] ) . "</a>
            </li>
        </ul>
    </fieldset>
   " . (($profile['_parsedMember']['restrict_post'] || $profile['_parsedMember']['mod_posts'] || $profile['_parsedMember']['temp_ban']) ? ("<fieldset>
        <h3 class='bar'>{$this->lang->words['em_restrictions']}</h3>
        <ul class='ipsForm ipsForm_horizontal'>
            " . (($profile['_parsedMember']['mod_posts']) ? ("
                <li class='ipsField clearfix ipsPad_top'>
                    <label for='photo' class='ipsField_title'>{$this->lang->words['em_rem_mod_preview']}</label>
                    <p class='ipsForm_content'>
                        <select name=\"modpreview\" id='modpreview' class='input_select'>
                            <option value=\"0\">{$this->lang->words['no']}</option>
                            <option value=\"1\">{$this->lang->words['yes']}</option>
                        </select>
                    </p>
                </li>
            ") : ("")) . "
            " . (($profile['_parsedMember']['restrict_post']) ? ("
                <li class='ipsField clearfix ipsPad_top'>
                    <label for='photo' class='ipsField_title'>{$this->lang->words['em_rem_restrict_post']}</label>
                    <p class='ipsForm_content'>
                        <select name=\"postingrestriction\" id='postingrestriction' class='input_select'>
                            <option value=\"0\">{$this->lang->words['no']}</option>
                            <option value=\"1\">{$this->lang->words['yes']}</option>
                        </select>
                    </p>
                </li>
            ") : ("")) . "
            " . (($profile['_parsedMember']['temp_ban']) ? ("
                <li class='ipsField clearfix ipsPad_top'>
                    <label for='photo' class='ipsField_title'>{$this->lang->words['em_rem_suspension']}</label>
                    <p class='ipsForm_content'>
                        <select name=\"remove_suspension\" id='remove_suspension' class='input_select'>
                            <option value=\"0\">{$this->lang->words['no']}</option>
                            <option value=\"1\">{$this->lang->words['yes']}</option>
                        </select>
                    </p>
                </li>
            ") : ("")) . "
        </ul>
    </fieldset>") : ("")) . "
	<fieldset>
		<h3 class='bar noTopBorder'>{$this->lang->words['edit_user_images']}</h3>
		<ul class='ipsForm ipsForm_horizontal'>
			<li class='ipsField clearfix ipsPad_top'>
				<label for='photo' class='ipsField_title'>{$this->lang->words['cp_remove_photo']}</label>
				<p class='ipsForm_content'>
					<select name=\"photo\" id='photo' class='input_select'>
						<option value=\"0\">{$this->lang->words['no']}</option>
						<option value=\"1\">{$this->lang->words['yes']}</option>
					</select>
					</p>
            </li>
        </ul>
        " . (($profile['_parsedMember']['gbw_no_status_update'] == 0) ? ("<h3 class='bar'>{$this->lang->words['edit_user_permissions']}</h3>
        <ul class='ipsForm ipsForm_horizontal'>
            <li class='ipsField clearfix ipsPad_top'>
                <label for='photo' class='ipsField_title'>{$this->lang->words['cp_can_post_status_updates']}</label>
                <p class='ipsForm_content'>
                    <select name=\"status_updates\" class='input_select'>
                        <option value=\"0\" " . (($profile['_parsedMember']['bw_no_status_update'] == 1) ? ("selected='selected'") : ("")) . ">{$this->lang->words['no']}</option>
                        <option value=\"1\" " . (($profile['_parsedMember']['bw_no_status_update'] == 0) ? ("selected='selected'") : ("")) . ">{$this->lang->words['yes']}</option>
                    </select>
				</p>
			</li>
		</ul>") : ("")) . "
		" . ((count($custom_fields->out_fields)) ? ("
			<h3 class='bar'>{$this->lang->words['edit_user_profile']}</h3>
			<ul class='ipsForm ipsForm_horizontal'>
				<li class='ipsField clearfix ipsPad_top'>
					<label for='title' class='ipsField_title'>{$this->lang->words['edit_user_title']}</label>
					<p class='ipsField_content'>
						<input type='text' class=\"input_text\" name='title' size='50' value='{$profile['title']}' />
					</p>
				</li>
				".$this->__f__fdd3f569b9fa667ac82fe5d0a4613669($profile,$custom_fields)."			</ul>
		") : ("")) . "
		<h3 class='bar'>{$this->lang->words['cp_edit_signature']}</h3>
		<div class='ipsPad'>
			{$profile['signature']}
		</div>
		<h3 class='bar'>{$this->lang->words['cp_edit_aboutme']}</h3>
		<div class='ipsPad'>
			{$profile['aboutme']}
		</div>
	</fieldset>
	<fieldset class='submit'>
		<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['cp_em_submit']}\" />
	</fieldset>
</div>
</form>";
return $IPBHTML;
}


function __f__fdd3f569b9fa667ac82fe5d0a4613669($profile, $custom_fields=null)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $custom_fields->out_fields as $id => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li class='ipsField clearfix ipsPad_top'>
						<label for='field_{$id}' class='ipsField_title'>{$custom_fields->field_names[ $id ]}</label>
						<div class='ipsField_content'>
							{$data}
							" . (($custom_fields->field_desc[ $id ]) ? ("
								<br /><span class='desc'>{$custom_fields->field_desc[ $id ]}</span>
							") : ("")) . "
						</div>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- inlineModIPMessage --*/
function inlineModIPMessage($msg='') {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>{$msg}</p>";
return $IPBHTML;
}

/* -- latestWarnLogs --*/
function latestWarnLogs($warnings, $pagelinks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['latestWarnLogs'] ) )
{
$count_48417100f1b6e6f087b78fcfeea04ed7 = is_array($this->functionData['latestWarnLogs']) ? count($this->functionData['latestWarnLogs']) : 0;
$this->functionData['latestWarnLogs'][$count_48417100f1b6e6f087b78fcfeea04ed7]['warnings'] = $warnings;
$this->functionData['latestWarnLogs'][$count_48417100f1b6e6f087b78fcfeea04ed7]['pagelinks'] = $pagelinks;
}

if ( ! isset( $this->registry->templateStriping['warnings'] ) ) {
$this->registry->templateStriping['warnings'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	<table class='ipb_table'>
		<tr class='header'>
			<th scope='col'>{$this->lang->words['w_v_warnto']}</th>
			<th scope='col'>{$this->lang->words['w_v_warnby']}</th>
			<th scope='col'>{$this->lang->words['w_v_reason']}</th>
			<th scope='col'>&nbsp;</th>
		</tr>
		" . ((is_array( $warnings ) AND count( $warnings )) ? ("
						".$this->__f__bf09b9bc0b70c5603a78a035d58d00c1($warnings,$pagelinks)."		") : ("
			<tr>
				<td class=\"no_messages\" colspan=\"3\">{$this->lang->words['warn__no_recent']}</td>
			</tr>
		")) . "
	</table>
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}


function __f__bf09b9bc0b70c5603a78a035d58d00c1($warnings, $pagelinks)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $warnings as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<tr class='" .  IPSLib::next( $this->registry->templateStriping["warnings"] ) . "'>
					<td><img src='{$r['pp_mini_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' alt='' /> " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r) : '' ) . "</td>
					<td>{$r['punisher_photo']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r['punisherMember']) : '' ) . "</td>
					<td>{$r['wl_reason']}</td>
					<td><span class='ipsButton_secondary clickable' onclick='warningPopup( this, {$r['wl_id']} )'>{$this->lang->words['w_v_moreinfo']}</span></td>
				</tr>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- memberLookup --*/
function memberLookup() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['memberLookup'] ) )
{
$count_a948c79574d1f78c2e14c32a0bd75061 = is_array($this->functionData['memberLookup']) ? count($this->functionData['memberLookup']) : 0;
}
$IPBHTML .= "" . (($this->memberData['g_is_supmod']) ? ("
" . $this->registry->getClass('output')->addJSModule("modcp", "0" ) . "
<script type='text/javascript'>
ipb.modcp.initialtext = \"{$this->lang->words['start_typing_lup']}\";
</script>
<div class='clearfix content_border'>
	<h3 class='bar noTopBorder'>{$this->lang->words['memberlookup_desc']}</h3>
	<div class='ipsPad'>
		<p class='desc'>{$this->lang->words['starttypeingmember']}</p>
		<form action='#' method='post' style='margin-top: 10px'>
			<input type='text' name='memberlookup' id='memberlookup' class='input_text' size='50' />
		</form>
	</div>
	<script type='text/javascript'>
		$('memberlookup').defaultize( \"{$this->lang->words['start_typing_lup']}\" );
	</script>
</div>
") : ("
<div class='clearfix'>
	<div class='ipsPad'>
		<p>{$this->lang->words['intro_blurb']}</p>
	</div>
</div>
")) . "";
return $IPBHTML;
}

/* -- membersList --*/
function membersList($type, $members, $pagelinks='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['membersList'] ) )
{
$count_1c793d8f054a6f4580070c432a493b7b = is_array($this->functionData['membersList']) ? count($this->functionData['membersList']) : 0;
$this->functionData['membersList'][$count_1c793d8f054a6f4580070c432a493b7b]['type'] = $type;
$this->functionData['membersList'][$count_1c793d8f054a6f4580070c432a493b7b]['members'] = $members;
$this->functionData['membersList'][$count_1c793d8f054a6f4580070c432a493b7b]['pagelinks'] = $pagelinks;
}

if ( ! isset( $this->registry->templateStriping['memberStripe'] ) ) {
$this->registry->templateStriping['memberStripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	<div id='member_list' class='clear block_wrap'>
		<div id='member_wrap'>
			<ul class='ipsMemberList'>
				" . ((is_array( $members ) and count( $members )) ? ("
										".$this->__f__c390de335caed9c35c0f03769d67ed51($type,$members,$pagelinks)."				") : ("
					<p class='no_messages'>{$this->lang->words['no_results']}</p>
				")) . "
			</ul>
		</div>
	</div>
</div>
	<div>{$pagelinks}</div>";
return $IPBHTML;
}


function __f__c390de335caed9c35c0f03769d67ed51($type, $members, $pagelinks='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $members as $member )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<li id='member_id_{$member['member_id']}' class='ipsPad clearfix member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$member['pp_small_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$member['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_medium' /></a>
							<div class='ipsBox_withphoto'>
								<ul class='ipsList_inline right'>
									" . (($this->memberData['g_is_supmod'] == 1 && $member['member_id'] != $this->memberData['member_id']) ? ("
										<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;do=editmember&amp;mid={$member['member_id']}&amp;pf={$member['member_id']}", "public",'' ), "", "" ) . "' class='ipsButton_secondary'>{$this->lang->words['edit_member']}</a></li>
									") : ("")) . "
									" . (($member['show_warn']) ? ("
										<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;member={$member['member_id']}", "public",'' ), "", "" ) . "' id='warn_link_modcp_{$member['member_id']}' title='{$this->lang->words['warn_view_history']}' class='ipsButton_secondary'>{$this->lang->words['warn_view_history']}</a>
									") : ("")) . "
									" . (($this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' ) && $member['member_id'] != $this->memberData['member_id']) ? ("
										<li class='pm_button' id='pm_xxx_{$member['pp_member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$member['pp_member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['pm_member']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("send_msg") . "</a></li>
									") : ("")) . "
									<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['gbl_find_my_content']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("find_topics_link") . "</a></li>
									" . (($member['has_blog'] AND IPSLib::appIsInstalled( 'blog' )) ? ("
										<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;show_members_blogs={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_blog']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("blog_link") . "</a></li>
									") : ("")) . "
									" . (($member['has_gallery'] AND IPSLib::appIsInstalled( 'gallery' )) ? ("
										<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;user={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "useralbum" ) . "' title='{$this->lang->words['view_gallery']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("gallery_link") . "</a></li>
									") : ("")) . "
								</ul>
								
								<h3 class='ipsType_subtitle'>
									<strong>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "</strong>
								</h3>
								" . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($member['pp_reputation_points'] == 0 || !$member['pp_reputation_points']) ? ("
										<p class='reputation zero ipsType_small left'>
									") : ("")) . "
									" . (($member['pp_reputation_points'] > 0) ? ("
										<p class='reputation positive ipsType_small left'>
									") : ("")) . "
									" . (($member['pp_reputation_points'] < 0) ? ("
										<p class='reputation negative ipsType_small left'>
									") : ("")) . "							
											<span class='number'>{$member['pp_reputation_points']}</span>
										</p>") : ("")) . "
								<span class='desc'>
									{$this->lang->words['member_joined']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0)) . "<br />
									" . IPSMember::makeNameFormatted( $member['group'], $member['member_group_id'] ) . " &middot; <strong>{$this->lang->words['modqueued_til']}: " . ((in_array( $type, array( 'modposts', 'suspended', 'restrictposts' ) )) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;member={$member['member_id']}&amp;_tab=warn&amp;type=minus", "public",'' ), "", "" ) . "'>") : ("")) . "<em>{$member['_language']}</em>" . ((in_array( $type, array( 'modposts', 'suspended', 'restrictposts' ) )) ? ("</a>") : ("")) . "</strong>
								</span>
							</div>
						</li>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- membersModIPForm --*/
function membersModIPForm($ip="", $inlineMsg='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['membersModIPForm'] ) )
{
$count_c7eabc84d8b58d191af930fd0df484e9 = is_array($this->functionData['membersModIPForm']) ? count($this->functionData['membersModIPForm']) : 0;
$this->functionData['membersModIPForm'][$count_c7eabc84d8b58d191af930fd0df484e9]['ip'] = $ip;
$this->functionData['membersModIPForm'][$count_c7eabc84d8b58d191af930fd0df484e9]['inlineMsg'] = $inlineMsg;
}
$IPBHTML .= "<div class='content_border'><h3 class='bar noTopBorder'>{$this->lang->words['menu_ipsearch']}</h3>
<div class='ipsBox clearfix'>
	<form id=\"userCPForm\" action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=iplookup&amp;fromapp=members&amp;_do=submit", "public",'' ), "", "" ) . "\" method=\"post\">
	<fieldset class=\"ipsBox_container ipsPad\">
		" . (($inlineMsg) ? ("
			{$inlineMsg}
		") : ("")) . "
		<br />
		
		<ul class='ipsForm ipsForm_horizontal'>
			<li class='ipsField'>
				<label for='ipsearch' class='ipsField_title'>{$this->lang->words['ip_enter']}</label>
				<p class='ipsField_content'>
					<input type=\"text\" size=\"40\" maxlength=\"24\" class='input_text' name=\"ip\" value=\"" . (($ip) ? ("{$ip}") : ("{$this->request['ip']}")) . "\" />
					<select name=\"iptool\" class='input_select'>
						<option value=\"resolve\">{$this->lang->words['ip_resolve']}</option>
						<option value=\"posts\">{$this->lang->words['ip_posts']}</option>
						<option value=\"members\">{$this->lang->words['ip_members']}</option>
					</select>&nbsp;
					<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['ip_submit']}\" />
				</p>
			</li>
		</ul>
		<p class='message unspecific'>
			{$this->lang->words['ip_desc_text']}
		</p>
		<p class='desc'>
			{$this->lang->words['ip_warn_text']}
		</p>
	</fieldset>
	</form>
</div></div>";
return $IPBHTML;
}

/* -- membersModIPFormMembers --*/
function membersModIPFormMembers($pages="",$members) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['membersModIPFormMembers'] ) )
{
$count_ea9d68c623d18d0021a05bae1eeb07ed = is_array($this->functionData['membersModIPFormMembers']) ? count($this->functionData['membersModIPFormMembers']) : 0;
$this->functionData['membersModIPFormMembers'][$count_ea9d68c623d18d0021a05bae1eeb07ed]['pages'] = $pages;
$this->functionData['membersModIPFormMembers'][$count_ea9d68c623d18d0021a05bae1eeb07ed]['members'] = $members;
}

if ( ! isset( $this->registry->templateStriping['members'] ) ) {
$this->registry->templateStriping['members'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<div class='topic_controls'>
	{$pages}
</div>
<br />
<table class='ipb_table'>
	<tr class='header'>
		<th style='width: 20%'>{$this->lang->words['ipm_name']}</th>
		<th style='width: 15%'>{$this->lang->words['ipm_ip']}</th>
		<th style='width: 10%' class='short'>{$this->lang->words['ipm_posts']}</th>
		<th style='width: 20%' class='short'>{$this->lang->words['ipm_reg']}</th>
		<th style='width: 15%'>{$this->lang->words['ipm_group']}</th>
		<th style='width: 10%'>&nbsp;</th>
	</tr>
	" . ((is_array( $members ) AND count( $members )) ? ("
				".$this->__f__6cb1ddebae02476b941b5a8e4a31198c($pages,$members)."	") : ("")) . "
</table>
<br />
<div class='topic_controls'>
	{$pages}
</div>";
return $IPBHTML;
}


function __f__6cb1ddebae02476b941b5a8e4a31198c($pages="",$members)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $members as $id => $row )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr class='" .  IPSLib::next( $this->registry->templateStriping["members"] ) . "'>
				<td>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($row) : '' ) . "</td>
				<td class='altrow'>{$row['ip_address']}</td>
				<td class='short'>{$row['posts']}</td>
				<td class=\"altrow short\">{$row['joined']}</td>
				<td>{$row['groupname']}</td>
				<td class=\"altrow short\">
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;do=editmember&amp;mid={$row['member_id']}", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['ipm_edit']}\" class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['ipm_edit']}</a>
				</td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- membersModIPFormPosts --*/
function membersModIPFormPosts($count=0, $pageLinks='', $results) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['membersModIPFormPosts'] ) )
{
$count_fdae79f7098986d94a3916095e7286da = is_array($this->functionData['membersModIPFormPosts']) ? count($this->functionData['membersModIPFormPosts']) : 0;
$this->functionData['membersModIPFormPosts'][$count_fdae79f7098986d94a3916095e7286da]['count'] = $count;
$this->functionData['membersModIPFormPosts'][$count_fdae79f7098986d94a3916095e7286da]['pageLinks'] = $pageLinks;
$this->functionData['membersModIPFormPosts'][$count_fdae79f7098986d94a3916095e7286da]['results'] = $results;
}

if ( ! isset( $this->registry->templateStriping['posts'] ) ) {
$this->registry->templateStriping['posts'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<p class='message'>
	{$this->lang->words['ipp_found']} {$count}
</p>
<br />
<div class='topic_controls'>
	{$pageLinks}
</div>
<br />
" . ((count($results)) ? ("
		".$this->__f__77d5f73c11cfb99c27cf194084f21c80($count,$pageLinks,$results)."") : ("")) . "
<br />
<div class='topic_controls'>
	{$pageLinks}
</div>";
return $IPBHTML;
}


function __f__77d5f73c11cfb99c27cf194084f21c80($count=0, $pageLinks='', $results)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $results as $result )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<div class='post_block ucp no_sidebar " .  IPSLib::next( $this->registry->templateStriping["posts"] ) . "'>
			<h3>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($result) : '' ) . " | <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$result['topic_id']}&amp;findpost={$result['pid']}", "public",'' ), "{$result['title_seo']}", "showtopic" ) . "' title='{$this->lang->words['modip_viewposts']}'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($result['post_date'],"long", 0)) . "</a></h3>
			<div class='post_body'>
				<div class='post'>{$result['post']}<br /></div>
			</div>
		</div>
		<hr />
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- modAnnounceForm --*/
function modAnnounceForm($announce,$forum_html,$type,$editor_html,$msg="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modAnnounceForm'] ) )
{
$count_8daaab6ef9b6879e93a7dd6151fc3e4d = is_array($this->functionData['modAnnounceForm']) ? count($this->functionData['modAnnounceForm']) : 0;
$this->functionData['modAnnounceForm'][$count_8daaab6ef9b6879e93a7dd6151fc3e4d]['announce'] = $announce;
$this->functionData['modAnnounceForm'][$count_8daaab6ef9b6879e93a7dd6151fc3e4d]['forum_html'] = $forum_html;
$this->functionData['modAnnounceForm'][$count_8daaab6ef9b6879e93a7dd6151fc3e4d]['type'] = $type;
$this->functionData['modAnnounceForm'][$count_8daaab6ef9b6879e93a7dd6151fc3e4d]['editor_html'] = $editor_html;
$this->functionData['modAnnounceForm'][$count_8daaab6ef9b6879e93a7dd6151fc3e4d]['msg'] = $msg;
}
$IPBHTML .= "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=save&amp;announce_id={$announce['announce_id']}&amp;type={$type}", "public",'' ), "", "" ) . "\" method=\"post\" id='postingform'>
<input type=\"hidden\" name=\"secure_key\" value=\"{$this->member->form_hash}\" />
<fieldset class='row1'>
	<h3 class='ipsType_subtitle'>" . (($type=='add') ? ("{$this->lang->words['announce_add']}") : ("{$this->lang->words['announce_button_edit']}")) . "</h3>
	<br />
	" . (($msg) ? ("
		<p class='message unspecific'>{$msg}</p>
	") : ("")) . "
	<ul class='ipsForm ipsForm_horizontal'>
		<li class='ipsField clearfix'>
			<label for='announce_title' class='ipsField_title'>{$this->lang->words['announce_form_title']}</label>
			<p class='ipsField_content'>
				<input class='input_text' type=\"text\" size=\"50\" name=\"announce_title\" id='announce_title' value=\"{$announce['announce_title']}\" tabindex=\"1\" />
			</p>
		</li>
		<li class='ipsField clearfix'>
			<label for='announce_start' class='ipsField_title'>{$this->lang->words['announce_form_start']}</label>
			<p class='ipsField_content'>
				<input class='input_text' type=\"text\" size=\"10\" name=\"announce_start\" id='announce_start' value=\"{$announce['announce_start']}\" tabindex=\"2\" /><br />
				<span class=\"desc lighter\">{$this->lang->words['announce_form_date']} {$this->lang->words['announce_form_startdesc']}</span>
			</p>
		</li>
		<li class='ipsField clearfix'>
			<label for='announce_end' class='ipsField_title'>{$this->lang->words['announce_form_end']}</label>
			<p class='ipsField_content'>
				<input class='input_text' type=\"text\" size=\"10\" name=\"announce_end\" id='announce_end' value=\"{$announce['announce_end']}\" tabindex=\"2\" /><br />
				<span class=\"desc lighter\">{$this->lang->words['announce_form_date']} {$this->lang->words['announce_form_enddesc']}</span>
			</p>				
		</li>
		<li class='ipsField clearfix'>
			<label for='announce_forum' class='ipsField_title'>{$this->lang->words['announce_form_forums']}</label>
			<p class='ipsField_content'>
				<select class=\"input_select\" multiple=\"multiple\" size=\"10\" id='announce_forum' name=\"announce_forum[]\" tabindex=\"4\">{$forum_html}</select><br />
				<span class=\"desc lighter\">{$this->lang->words['announce_form_forums2']}</span>
			</p>
		</li>
		<li class='ipsField clearfix'>
			<label for='' class='ipsField_title'>{$this->lang->words['announce_form_announce']}</label>
			<div class='ipsField_content'>
				{$editor_html}
			</div>
		</li>
		<li class='ipsField ipsField_checkbox'>
			<input type=\"checkbox\" class=\"checkbox\" name=\"announce_active\" id='announce_active' value=\"1\" {$announce['announce_active_checked']} />
			<p class='ipsField_content'>
				<label for='announce_active'>{$this->lang->words['announce_form_enable']}</label>
			</p>
		</li>
		<li class='ipsField ipsField_checkbox'>
			<input type=\"checkbox\" class=\"checkbox\" name=\"announce_html_enabled\" id='announce_html_enabled' value=\"1\" {$announce['html_checkbox']} />
			<p class='ipsField_content'>
				<label for='announce_html_enabled'>{$this->lang->words['announce_use_html']}</label>
			</p>
		</li>
	</ul>
</fieldset>
<br />
<fieldset class='submit'>
	<input type=\"submit\" value=\"" . (($type=='add') ? ("{$this->lang->words['announce_add']}") : ("{$this->lang->words['announce_button_edit']}")) . "\" class=\"input_submit\" tabindex=\"7\" /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums", "public",'' ), "", "" ) . "' title='{$this->lang->words['cancel_edit']}' class='cancel'>{$this->lang->words['cancel']}</a>
</fieldset>
</form>
<script type=\"text/javascript\">
document.observe(\"dom:loaded\", function() {
	if ( $('announce_html_enabled') )
	{
		ipb.textEditor.bindHtmlCheckbox( $('announce_html_enabled') );
	}
} );
</script>";
return $IPBHTML;
}

/* -- modAnnouncements --*/
function modAnnouncements($announcements) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modAnnouncements'] ) )
{
$count_6bdc31adff7d45032b694439407812dc = is_array($this->functionData['modAnnouncements']) ? count($this->functionData['modAnnouncements']) : 0;
$this->functionData['modAnnouncements'][$count_6bdc31adff7d45032b694439407812dc]['announcements'] = $announcements;
}

if ( ! isset( $this->registry->templateStriping['announcements'] ) ) {
$this->registry->templateStriping['announcements'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("ucp", "0" ) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=save", "public",'' ), "", "" ) . "\" id=\"mutliact\" method=\"post\">
<div class='topic_buttons'>
	<ul class='topic_controls'>
		<li>
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=add", "public",'' ), "", "" ) . "\" class='ipsButton'>{$this->lang->words['announce_add']}</a>
		</li>
	</ul>
</div>
	<div class='content_border clear'><h3 class='bar noTopBorder'>{$this->lang->words['announce_current']}</h3>
	<table class='ipb_table' summary=\"{$this->lang->words['ucp_announcements']}\">
		<tr class='header'>
			<th scope='col' style=\"width: 40%\">{$this->lang->words['announce_title']}</th>
			<th scope='col' class='short' style=\"width: 10%\">{$this->lang->words['announce_form_starts']}</th>
			<th scope='col' class='short' style=\"width: 10%\">{$this->lang->words['announce_form_end']}</th>
			<th scope='col' style=\"width: 25%\">{$this->lang->words['announce_forums']}</th>
			<th scope='col' style=\"width: 15%\">&nbsp;</th>
		</tr>
		" . ((is_array( $announcements ) AND count( $announcements )) ? ("
						".$this->__f__5f9ee6d10db8d3b0aa1d993150b766ba($announcements)."		") : ("
			<tr>
				<td class='no_messages' colspan=\"5\">{$this->lang->words['announce_none']}</td>
			</tr>
		")) . "
	</table></div>
</form>";
return $IPBHTML;
}


function __f__a1bf6b733db5d97022f9fdafddaa5aa5($announcements,$announce='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $announce['_forums'] as $forum )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
										<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$forum[0]}", "public",'' ), "", "" ) . "\">{$forum[1]}</a></li>
									
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__5f9ee6d10db8d3b0aa1d993150b766ba($announcements)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $announcements as $announce )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<tr class=\"" .  IPSLib::next( $this->registry->templateStriping["announcements"] ) . " " . ((!$announce['announce_active']) ? ("moderated") : ("")) . "\">
					<td>
						<strong><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showannouncement={$announce['announce_id']}&amp;f=0", "public",'' ), "{$announce['announce_seo_title']}", "showannouncement" ) . "\">{$announce['announce_title']}</a></strong> " . ((!$announce['announce_active']) ? ("<span class='desc'>{$this->lang->words['announce_page_disabled']}</span>") : ("")) . "<br /><span class=\"desc\">{$this->lang->words['by_ucfirst']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($announce) : '' ) . "</span>
					</td>
					<td class=\"short\">
						" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($announce['announce_start'],"DATE", 1)) . "
					</td>
					<td class=\"short\">
						" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($announce['announce_end'],"DATE", 1)) . "
					</td>
					<td>
						<div class=\"forumdesc\">
							" . (($announce['announce_forum'] == '*') ? ("
								{$this->lang->words['announce_page_allforums']}
							") : ("" . ((is_array( $announce['_forums'] ) and count( $announce['_forums'] )) ? ("
									<ul>
									".$this->__f__a1bf6b733db5d97022f9fdafddaa5aa5($announcements,$announce)."									</ul>
								") : ("
									{$announce['announce_forum_show']}
								")) . "")) . "
						</div>
					</td>
					<td class=\"short\">
						<ul class='ipsList_inline ipsList_nowrap'>
							<li>
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=edit&amp;announce_id={$announce['announce_id']}", "public",'' ), "", "" ) . "\" class='ipsButton_secondary'>{$this->lang->words['announce_edit']}</a>
							</li>
							<li>
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=delete&amp;announce_id={$announce['announce_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "\" id=\"del_{$announce['announce_id']}\" class='ipsButton_secondary' data-confirmaction=\"true\">{$this->lang->words['announce_delete']}</a>
							</li>
						</ul>
						<script type='text/javascript'>
							$('del_{$announce['announce_id']}').observe('click', ipb.ucp.deleteAnnouncement.bindAsEventListener( this, {$announce['announce_id']} ) );
						</script>
					</td>
				</tr>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- modControls --*/
function modControls($editmember, $warnpanel, $warnlogs, $noteForm, $return) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modControls'] ) )
{
$count_4522b0df324091865075b1d4064b8073 = is_array($this->functionData['modControls']) ? count($this->functionData['modControls']) : 0;
$this->functionData['modControls'][$count_4522b0df324091865075b1d4064b8073]['editmember'] = $editmember;
$this->functionData['modControls'][$count_4522b0df324091865075b1d4064b8073]['warnpanel'] = $warnpanel;
$this->functionData['modControls'][$count_4522b0df324091865075b1d4064b8073]['warnlogs'] = $warnlogs;
$this->functionData['modControls'][$count_4522b0df324091865075b1d4064b8073]['noteForm'] = $noteForm;
$this->functionData['modControls'][$count_4522b0df324091865075b1d4064b8073]['return'] = $return;
}
$IPBHTML .= "<div class='sb_titlebox'>
<h1 class='ipsType_pagetitle'>" . sprintf( $this->lang->words['modcp_editing_h1'], $return['members_display_name'] ) . "</h1>
" . (($this->request['pf']) ? ("
	<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$return['member_id']}", "public",'' ), "{$return['members_seo_name']}", "showuser" ) . "'>{$this->lang->words['_larr']} " . sprintf( $this->lang->words['go_back_profile'], $return['members_display_name'] ) . "</a>
") : ("" . (($this->request['t']) ? ("
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$return['tid']}", "public",'' ), "{$return['title_seo']}", "showtopic" ) . "'>{$this->lang->words['_larr']} " . sprintf( $this->lang->words['go_back_general'], $return['title'] ) . "</a>
	") : ("
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp", "public",'' ), "", "" ) . "'>{$this->lang->words['_larr']} {$this->lang->words['go_back_modcp']}</a>
	")) . "")) . "
</div>
<br />
<div class='ipsBox clear' id='modCpanel'>
	<div class='ipsVerticalTabbed ipsLayout ipsLayout_withleft ipsLayout_smallleft clearfix'>
		<div class='ipsVerticalTabbed_tabs ipsLayout_left' id='modcp_tabs'>
			<ul class='modcp_tabs'>
				" . (($editmember) ? ("<li id='editmember_tab'" . ((empty($this->request['_tab'])) ? (" class='active'") : ("")) . "><a href='#'>{$this->lang->words['editmember_tab']}</a></li>") : ("")) . "
				" . (($this->settings['warn_on']) ? ("<li id='warnpanel_tab'" . (((!empty($this->request['_tab']) AND $this->request['_tab'] == 'warn') OR !$editmember) ? (" class='active'") : ("")) . "><a href='#'>{$this->lang->words['warnpanel_tab']}</a></li>
					<li id='warnlogs_tab'" . ((!empty($this->request['_tab']) AND $this->request['_tab'] == 'warnlogs') ? (" class='active'") : ("")) . "><a href='#'>{$this->lang->words['warnlog_tab']}</a></li>
					<li id='noteform_tab'" . ((!empty($this->request['_tab']) AND $this->request['_tab'] == 'noteform') ? (" class='active'") : ("")) . "><a href='#'>{$this->lang->words['addnote_tab']}</a></li>") : ("")) . "
			</ul>
		</div>
		<div class='ipsVerticalTabbed_content ipsLayout_content ipsBox_container'>
			<div class='ipsPad'>
				" . (($editmember) ? ("<div id='editmember_pane' " . ((!empty($this->request['_tab']) AND in_array( $this->request['_tab'], array('warn','warnlogs','noteform') )) ? ("style='display: none'") : ("")) . ">
						{$editmember}
					</div>") : ("")) . "
				" . (($this->settings['warn_on']) ? ("<div id='warnpanel_pane' " . (((empty($this->request['_tab']) OR $this->request['_tab'] != 'warn') AND $editmember) ? ("style='display: none'") : ("")) . ">
						{$warnpanel}
					</div>
					<div id='warnlogs_pane' " . ((empty($this->request['_tab']) OR $this->request['_tab'] != 'warnlogs') ? ("style='display: none'") : ("")) . ">
						{$warnlogs}
					</div>
					<div id='noteform_pane' " . ((empty($this->request['_tab']) OR $this->request['_tab'] != 'noteform') ? ("style='display: none'") : ("")) . ">
						{$noteForm}
					</div>") : ("")) . "
			</div>
		</div>
	</div>
</div>
<script type='text/javascript'>
(function(){
	var currentTab = $('modcp_tabs').select(\"li.active\")[0];
	
	if( !currentTab )
	{
		currentTab = $('modcp_tabs').select('li')[0];
	}
	var togglePane = function(e, elem){
		if(e){ Event.stop(e) }
		
		if( currentTab ){
			if( getId( currentTab.id ) == getId( elem.id ) ){
				return;
			}
			
			$( getId( currentTab.id ) + '_pane' ).fade({duration: 0.3});
		}
		
		var newPane = $( getId( elem.id ) + '_pane' );
		$( newPane ).appear({duration: 0.3});
		
		$('modcp_tabs').select(\"li\").invoke(\"removeClassName\", 'active');
		
		$(elem).addClassName('active');
		currentTab = elem;
	};
	
	var getId = function( id ){
		return id.replace(/\\_pane|\\_tab/g, '');
	};
	
	$('modcp_tabs').on('click', 'li', togglePane);
	togglePane( null, currentTab );
})();
	
</script>";
return $IPBHTML;
}

/* -- modcpMessage --*/
function modcpMessage($message='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modcpMessage'] ) )
{
$count_c97c79f022447a42dd8d7d489d9b7279 = is_array($this->functionData['modcpMessage']) ? count($this->functionData['modcpMessage']) : 0;
$this->functionData['modcpMessage'][$count_c97c79f022447a42dd8d7d489d9b7279]['message'] = $message;
}
$IPBHTML .= "<div class='clearfix '>
	<div class='ipsBox_container ipsPad'>
		<p>" . (($message) ? ("{$message}") : ("{$this->lang->words['noperm_for_modcp_act']}")) . "</p>
	</div>
</div>";
return $IPBHTML;
}

/* -- modCPpost --*/
function modCPpost($post, $displayData, $topic, $type) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modCPpost'] ) )
{
$count_566ec276eb35dca77c5522d9b0ec5909 = is_array($this->functionData['modCPpost']) ? count($this->functionData['modCPpost']) : 0;
$this->functionData['modCPpost'][$count_566ec276eb35dca77c5522d9b0ec5909]['post'] = $post;
$this->functionData['modCPpost'][$count_566ec276eb35dca77c5522d9b0ec5909]['displayData'] = $displayData;
$this->functionData['modCPpost'][$count_566ec276eb35dca77c5522d9b0ec5909]['topic'] = $topic;
$this->functionData['modCPpost'][$count_566ec276eb35dca77c5522d9b0ec5909]['type'] = $type;
}
$IPBHTML .= "<!--post:{$post['post']['pid']}-->
<script type=\"text/javascript\">
var pid = parseInt({$post['post']['pid']});
if ( pid > ipb.topic.topPid ){
	ipb.topic.topPid = pid;
}
</script>
<div class='post_block hentry clear no_sidebar " . (($this->settings['reputation_enabled']) ? ("with_rep") : ("")) . "' id='post_id_{$post['post']['pid']}'>
	<a id='entry{$post['post']['pid']}'></a>
	" . ((!empty( $post['post']['_repignored'] ) AND $post['post']['_repignored'] == 1 && $post['post']['_ignored'] != 1) ? ("<div class='post_ignore'>
			" . (($post['post']['rep_points'] == 0) ? ("
				<span class='reputation zero' title='{$this->lang->words['top_rep']}'>
			") : ("")) . "
			" . (($post['post']['rep_points'] > 0) ? ("
				<span class='reputation positive' title='{$this->lang->words['top_rep']}'>
			") : ("")) . "
			" . (($post['post']['rep_points'] < 0) ? ("
				<span class='reputation negative' title='{$this->lang->words['top_rep']}' >
			") : ("")) . "
					{$post['post']['rep_points']}</span> {$this->lang->words['top_this_post_by']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$post['author']['member_id']}", "public",'' ), "", "" ) . "'>{$post['author']['members_display_name']}</a> {$this->lang->words['top_below_thresh']}. <a href='#' title='{$this->lang->words['ignore_view_post']}' id='unhide_post_{$post['post']['pid']}'>{$this->lang->words['rep_view_anyway']}</a>
		</div>") : ("")) . "
	
	<div class='post_wrap'>
		<h3 class='" . ((empty($post['author']['member_id'])) ? ("guest ") : ("")) . "row2'>
			<img src='{$post['author']['pp_small_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' />&nbsp;
			" . (($post['author']['member_id']) ? ("
				<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($post['author']) : '' ) . "</span>
			") : ("
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($post['author']) : '' ) . "
			")) . "
			
			" . (($post['post']['_show_ip']) ? ("<span class='ip right ipsType_small'>({$this->lang->words['ip']}:
				" . (($post['author']['g_access_cp']) ? ("
					<em>{$this->lang->words['ip_private']}</em>
				") : ("
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=iplookup&amp;fromapp=members&amp;_do=submit&amp;ip={$post['post']['ip_address']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['info_about_this_ip']}'>{$post['post']['ip_address']}</a>
				")) . ")
				</span>") : ("")) . "
		</h3>
		
		<div class='post_body'>
			" . (($type == 'deleted') ? ("<ul class='ipsList_inline modcp_post_controls right'>
					" . ((!$post['post']['_isDeleted']) ? ("
						<li>
							<img data-tooltip=\"{$this->lang->words['hard_delete_warn_post']}\" src='{$this->settings['img_url']}/icon_timewarning.png' />
						</li>
					") : ("")) . "
					" . (($this->registry->getClass('class_forums')->canSoftDeletePosts( $post['post']['forum_id'], $post )) ? ("
						<li>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=p_hrestore&amp;f={$post['post']['forum_id']}&amp;t={$post['post']['topic_id']}&amp;pid[]={$post['post']['pid']}&amp;st={$this->request['st']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller' title='{$this->lang->words['restore_post_desc']}'>{$this->lang->words['restore_post']}</a>
						</li>
					") : ("")) . "
					" . (($this->registry->getClass('class_forums')->canHardDeletePosts( $post['post']['forum_id'], $post )) ? ("
						<li>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=p_hdelete&amp;f={$post['post']['forum_id']}&amp;t={$post['post']['topic_id']}&amp;pid[]={$post['post']['pid']}&amp;st={$this->request['st']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller important' title='{$this->lang->words['perm_delete_post']}'>{$this->lang->words['perm_delete_post']}</a>
						</li>
					") : ("")) . "
				</ul>
				<ul class='ipsList_inline" . ((empty($displayData['sdData'][ $post['post']['pid'] ])) ? (" modcp_post_controls") : ("")) . "'>
					<li class='desc'>
						<strong>{$this->lang->words['posted']}</strong> <span class='desc lighter'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($post['post']['post_date'],"short", 0)) . "</span>
					</li>
					<li class='desc'>
						<strong>{$this->lang->words['deleted_post_date']}</strong> <span class='desc lighter'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($topic['post']['pdelete_time'],"short", 0)) . "</span>
					</li>
					<li class='desc'>
						<strong>{$this->lang->words['delete_from_topic']}</strong> <a class='desc lighter' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['post']['tid']}", "public",'' ), "{$topic['post']['title_seo']}", "showtopic" ) . "' title='{$this->lang->words['go_to_topic']}'>" . IPSText::truncate( $topic['post']['title'], 25 ) . "</a>
					</li>
				</ul>
				" . ((! empty($displayData['sdData'][ $post['post']['pid'] ])) ? ("<ul class='ipsList_inline modcp_post_controls'>
						<li class='desc'>
							<strong>{$this->lang->words['dlt_topic_deletedby']}</strong> <span class='desc lighter blend_links'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($displayData['sdData'][ $post['post']['pid'] ]) : '' ) . "</span>
						</li>
						" . (($post['post']['_softDeleteReason']) ? ("<li class='desc'>
								<strong>{$this->lang->words['dlt_topic_reason']}</strong> <span class='desc lighter'><em>" . (($displayData['sdData'][ $post['post']['pid'] ]['sdl_obj_reason']) ? ("{$displayData['sdData'][ $post['post']['pid'] ]['sdl_obj_reason']}") : ("{$this->lang->words['tdb__noreasongi']}")) . "</em></span>
							</li>") : ("")) . "
					</ul>") : ("")) . "") : ("")) . "
			" . (($type == 'unapproved') ? ("<ul class='ipsList_inline modcp_post_controls'>
					" . (($post['post']['_can_edit'] === TRUE) ? ("
						<li class='post_edit'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=post&amp;section=post&amp;do=edit_post&amp;f={$post['post']['forum_id']}&amp;t={$post['post']['topic_id']}&amp;p={$post['post']['pid']}&amp;st={$this->request['st']}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' title='{$this->lang->words['post_edit_title']}' class='ipsButton_secondary ipsType_smaller' id='edit_post_{$post['post']['pid']}'>{$this->lang->words['post_edit']}</a></li>
					") : ("")) . "
					<!-- Matt: Approve / unapprove post button -->
					" . (($this->memberData['is_mod']) ? ("<li id='toggle_post_{$post['post']['pid']}'>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=postchoice&amp;tact=approve&amp;selectedpids[{$post['post']['pid']}]={$post['post']['pid']}&amp;t={$post['post']['topic_id']}&amp;f={$post['post']['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' title='{$this->lang->words['post_toggle_visible']}' class='ipsButton_secondary ipsType_smaller'><span id='toggletext_post_{$post['post']['pid']}'>" . (($post['post']['queued']==1) ? ("{$this->lang->words['post_approve']}") : ("{$this->lang->words['post_unapprove']}")) . "</span></a>
						</li>") : ("")) . "
					" . (($post['post']['_can_delete'] === TRUE OR $post['post']['_softDelete']) ? ("
						<li class='post_del' id='del_post_{$post['post']['pid']}'>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=04&amp;f={$post['post']['forum_id']}&amp;t={$post['post']['topic_id']}&amp;p={$post['post']['pid']}&amp;st={$this->request['st']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' title='{$this->lang->words['post_delete_title']}' class='delete_post ipsButton_secondary important ipsType_smaller'>{$this->lang->words['post_delete']}</a>
						</li>
					") : ("")) . "
					" . (($this->memberData['_cache']['report_temp']['post_marker']['post'][ $post['post']['pid'] ]['gfx'] > 0) ? ("
						<img src=\"{$this->settings['img_url']}/reports/post_alert_{$this->memberData['_cache']['report_temp']['post_marker']['post'][ $post['post']['pid']]['gfx']}.png\" alt=\"\" class='ipbmenu clickable' id='post-report-{$post['post']['pid']}' />
					") : ("")) . "
					<li class='desc'>
						<strong>{$this->lang->words['posted']}</strong> <span class='desc lighter'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($post['post']['post_date'],"short", 0)) . "</span>
					</li>
					<li class='desc'>
						<strong>{$this->lang->words['in_topic']}</strong> <a class='desc lighter' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['post']['tid']}", "public",'' ), "{$topic['post']['title_seo']}", "showtopic" ) . "'>" . IPSText::truncate( $topic['post']['title'], 35 ) . "</a>
					</li>
				</ul>") : ("")) . "
			<div class='post entry-content " . (($post['post']['_repignored'] == 1) ? ("imgsize_ignore") : ("")) . "'>
				{$post['post']['post']}
				{$post['post']['attachmentHtml']}
				<br />
				" . (($post['post']['edit_by']) ? ("<p class='edit'>
						{$post['post']['edit_by']}
						" . (($post['post']['post_edit_reason'] != '') ? ("
							<br />
							<span class='reason'>{$post['post']['post_edit_reason']}</span>
						") : ("")) . "
					</p>") : ("")) . "
			</div>
			<br />
		</div>
		
		<script type='text/javascript'>
			if( $('toggle_post_{$post['post']['pid']}') ){
				$('toggle_post_{$post['post']['pid']}').show();
			}
			
			// Add perm data
			ipb.topic.deletePerms[{$post['post']['pid']}] = { 'canDelete' : " . intval($post['post']['_can_delete']) . ", 'canSoftDelete' : " . intval($post['post']['_softDelete']) . " };
		</script>
		" . (($this->memberData['_cache']['report_temp']['post_marker']['post'][ $post['post']['pid'] ]['gfx'] > 0) ? ("
			<ul id='post-report-{$post['post']['pid']}_menucontent' class='ipbmenu_content report_menu' style='display: none'>
				<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=reports&amp;do=show_report&amp;rid={$this->memberData['_cache']['report_temp']['post_marker']['post'][ $post['post']['pid'] ]['info']['id']}", "public",'' ), "", "" ) . "\" id='report_mark_{$post['post']['pid']}'><img src='{$this->settings['img_url']}/reports/mark_complete.png' alt='' /> {$this->lang->words['report_menu_mark_complete']}</a></li>
				<li><a href=\"{$this->settings['base_url']}app=core&amp;module=reports&amp;section=reports&amp;do=show_report&amp;rid={$this->memberData['_cache']['report_temp']['post_marker']['post'][$post['post']['pid']]['info']['id']}\"><img src='{$this->settings['img_url']}/reports/view_report.png' alt='' /> {$this->lang->words['report_menu_view_report']}</a></li>
			</ul>
			<script type=\"text/javascript\">
				$('report_mark_{$post['post']['pid']}').observe('click',
				 	ipb.global.updateReportStatus.bindAsEventListener( 	
						this, {$this->memberData['_cache']['report_temp']['post_marker']['post'][$post['post']['pid']]['info']['id']},2,2
					)
				);
			</script>
		") : ("")) . "
	</div>
</div>";
return $IPBHTML;
}

/* -- modCPtopic --*/
function modCPtopic($topics, $pagelinks, $type, $sdelete=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modCPtopic'] ) )
{
$count_47c1105179a41a35bb86331af2cb9618 = is_array($this->functionData['modCPtopic']) ? count($this->functionData['modCPtopic']) : 0;
$this->functionData['modCPtopic'][$count_47c1105179a41a35bb86331af2cb9618]['topics'] = $topics;
$this->functionData['modCPtopic'][$count_47c1105179a41a35bb86331af2cb9618]['pagelinks'] = $pagelinks;
$this->functionData['modCPtopic'][$count_47c1105179a41a35bb86331af2cb9618]['type'] = $type;
$this->functionData['modCPtopic'][$count_47c1105179a41a35bb86331af2cb9618]['sdelete'] = $sdelete;
}
$IPBHTML .= "".$this->__f__82f0ff000b69485ae19d720d000e957d($topics,$pagelinks,$type,$sdelete)."";
return $IPBHTML;
}


function __f__a4993f59bbf421a4e0f8aece60416d2c($topics, $pagelinks, $type, $sdelete=array(),$tid='',$data='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['pages'] as $page )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						" . (($page['last']) ? ("
							<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}&amp;st={$page['st']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "\" title='{$this->lang->words['topic_goto_page']} {$page['page']}'>{$page['page']} {$this->lang->words['_rarr']}</a></li>
						") : ("
							<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}&amp;st={$page['st']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "\" title='{$this->lang->words['topic_goto_page']} {$page['page']}'>{$page['page']}</a></li>
						")) . "
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__82f0ff000b69485ae19d720d000e957d($topics, $pagelinks, $type, $sdelete=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $topics as $tid => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<tr class='__topic' id='trow_{$data['tid']}' data-tid=\"{$data['tid']}\">
		<td class='__tid{$data['tid']} with_mod_links'>	
			" . (($data['state'] == 'link') ? ("
				{$this->lang->words['moved_topic_link']}
				<em>
			") : ("")) . "
			<a id=\"tid-link-{$data['tid']}\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "\" title='{$data['title']} {$this->lang->words['topic_started_on']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($data['start_date'],"LONG", 0)) . "' class='topic_title'>{$data['title']}</a>
			" . (($data['state'] == 'link') ? ("
				</em>
			") : ("")) . "
			" . ((isset( $data['pages'] ) AND is_array( $data['pages'] ) AND count( $data['pages'] )) ? ("
				<ul class='mini_pagination'>
				".$this->__f__a4993f59bbf421a4e0f8aece60416d2c($topics,$pagelinks,$type,$sdelete,$tid,$data)."				</ul>
			") : ("")) . "
			<br />
			" . (($data['state'] != 'link') ? ("<ul class='ipsList_inline'>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_startedby']}</strong> <span class='desc lighter blend_links'>" . (($data['starter_id']) ? ("" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($data) : '' ) . "") : ("{$data['starter']}")) . "</span>
					</li>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_posted']}</strong> <span class='desc lighter'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($data['start_date'],"short", 0)) . "</span>
					</li>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_inforum']}</strong> <span class='desc lighter blend_links'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$data['forum']['id']}", "public",'' ), "{$data['forum']['name_seo']}", "showforum" ) . "'>{$data['forum']['name']}</a></span>
					</li>
				</ul>") : ("
				<ul class='ipsList_inline'>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_link_from']}</strong>
						<span class='desc lighter'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$data['_toForum']['id']}", "public",'' ), "{$data['_toForum']['name_seo']}", "showforum" ) . "'>{$data['_toForum']['name']}</a></span>
					</li>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_link_to']}</strong>
						<span class='desc lighter'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$data['forum']['id']}", "public",'' ), "{$data['forum']['name_seo']}", "showforum" ) . "'>{$data['forum']['name']}</a></span>
					</li>
				</ul>
			")) . "
			" . (($data['_isDeleted']) ? ("<ul class='ipsList_inline'>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_deletedby']}</strong> <span class='desc lighter blend_links'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($sdelete[ $data['tid'] ]) : '' ) . "</span>
					</li>
					" . (($data['permissions']['SoftDeleteReason']) ? ("<li class='desc lighter'>
							<strong>{$this->lang->words['dlt_topic_reason']}</strong> <span class='desc lighter'><em>" . (($sdelete[ $data['tid'] ]['sdl_obj_reason']) ? ("{$sdelete[ $data['tid'] ]['sdl_obj_reason']}") : ("{$this->lang->words['tdb__noreasongi']}")) . "</em></span>
						</li>") : ("")) . "
				</span>") : ("")) . "
		</td>
		<td>
			" . (($data['state'] == 'link') ? ("<span class='desc'>" . $this->registry->getClass('class_localization')->formatNumber( $data['posts'] ) . " " . ((intval($data['posts']) == 1) ? ("{$this->lang->words['reply']}") : ("{$this->lang->words['replies']}")) . "</span>") : ("")) . "
		</td>
		<td>
			<ul class='ipsList_inline right'>
				" . (($type == 'deleted') ? ("" . (($data['state'] == 'link') ? ("" . (($data['permissions']['TopicSoftDeleteRestore']) ? ("
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=topic_restore&amp;t={$data['real_tid']}&amp;f={$data['_toForum']['id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' title='{$this->lang->words['restore_topic_desc']}' class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['restore_topic']}</a></li>
						") : ("")) . "
						" . (($this->registry->getClass('class_forums')->canHardDeleteTopics( $data['forum_id'], $data )) ? ("
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=09&amp;t={$data['real_tid']}&amp;f={$data['_toForum']['id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' title='{$this->lang->words['dlt_delete_topic']}' class='ipsButton_secondary ipsType_smaller important'>{$this->lang->words['perm_delete_topic']}</a></li>
						") : ("")) . "") : ("" . ((!$data['_isDeleted']) ? ("
							<li>
								<img data-tooltip=\"{$this->lang->words['hard_delete_warn_topic']}\" src='{$this->settings['img_url']}/icon_timewarning.png' />
							</li>
						") : ("")) . "
						" . (($data['permissions']['TopicSoftDeleteRestore']) ? ("
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=topic_restore&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' title='{$this->lang->words['restore_topic_desc']}' class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['restore_topic']}</a></li>
						") : ("")) . "
						" . (($this->registry->getClass('class_forums')->canHardDeleteTopics( $data['forum_id'], $data )) ? ("
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=09&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' title='{$this->lang->words['dlt_delete_topic']}' class='ipsButton_secondary ipsType_smaller important'>{$this->lang->words['perm_delete_topic']}</a></li>
						") : ("")) . "")) . "") : ("")) . "
				" . (($type == 'unapproved') ? ("<li>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=topic_approve&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['modcp_approvelink']}</a>
					</li>
					" . (($data['permissions']['TopicSoftDelete']) ? ("
						<li>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=03&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['HIDE_TOPIC']}</a>
						</li>
					") : ("")) . "
					" . (($this->registry->getClass('class_forums')->canHardDeleteTopics( $data['forum_id'], $data )) ? ("
						<li>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=08&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller important'>{$this->lang->words['modcp_deletelink']}</a>
						</li>
					") : ("")) . "") : ("")) . "
			</ul>
		</td>
	</tr>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- overview --*/
function overview() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['overview'] ) )
{
$count_2d52d747e415cf865ef37fff094cb80a = is_array($this->functionData['overview']) ? count($this->functionData['overview']) : 0;
}
$IPBHTML .= "<div class='clearfix '>
	<div class='ipsBox_container ipsPad'>
		<p>{$this->lang->words['intro_blurb']}</p>
	</div>
</div>
<br />
" . (($this->memberData['g_is_supmod']) ? ("
" . $this->registry->getClass('output')->addJSModule("modcp", "0" ) . "
<script type='text/javascript'>
ipb.modcp.initialtext = \"{$this->lang->words['start_typing_lup']}\";
</script>
<h2 class='maintitle'>{$this->lang->words['memberlookup_title']}</h2>
<div class='clearfix ipsBox'>
	<div class='ipsBox_container ipsPad'>
		<h3 class='ipsType_subtitle'>{$this->lang->words['memberlookup_desc']}</h3>
		<p class='desc'>{$this->lang->words['starttypeingmember']}</p>
		<form action='#' method='post' style='margin-top: 10px'>
			<input type='text' name='memberlookup' id='memberlookup' class='input_text' size='50' />
		</form>
	</div>
	<script type='text/javascript'>
		$('memberlookup').defaultize( \"{$this->lang->words['start_typing_lup']}\" );
	</script>
</div>
") : ("")) . "";
return $IPBHTML;
}

/* -- portalPage --*/
function portalPage($output, $tabs=array(), $_activeNav=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['portalPage'] ) )
{
$count_fa2585a928c6e8d8015d78f69fdedfe6 = is_array($this->functionData['portalPage']) ? count($this->functionData['portalPage']) : 0;
$this->functionData['portalPage'][$count_fa2585a928c6e8d8015d78f69fdedfe6]['output'] = $output;
$this->functionData['portalPage'][$count_fa2585a928c6e8d8015d78f69fdedfe6]['tabs'] = $tabs;
$this->functionData['portalPage'][$count_fa2585a928c6e8d8015d78f69fdedfe6]['_activeNav'] = $_activeNav;
}
$IPBHTML .= "<h1 class='ipsType_pagetitle'>{$this->lang->words['modcp_page_title']}</h1>
<br />
<div class='ipsBox'>
	<div class='ipsVerticalTabbed ipsLayout ipsLayout_withleft ipsLayout_smallleft clearfix'>
		<div class='ipsVerticalTabbed_tabs ipsLayout_left' id='modcp_tabs'>
			<ul class='clear'>
				<li id='index' class='" . (($_activeNav['primary'] == 'index' && $_activeNav['secondary'] == 'index') ? ("active ") : ("")) . "tab_toggle'>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp", "public",'' ), "", "" ) . "'>{$this->lang->words['modcp_tab_index']}</a>
				</li>
				" . ((IPSMember::isInGroup( $this->memberData, explode( ',', IPSText::cleanPermString( $this->settings['report_mod_group_access'] ) ) )) ? ("<li id='reported_content' class='" . (($_activeNav['primary'] == 'reported_content' && $_activeNav['secondary'] == 'reports') ? ("active ") : ("")) . "tab_toggle'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=reports&amp;do=index", "public",'' ), "", "" ) . "'>{$this->lang->words['modcp_tab_reports']}</a>
					</li>") : ("")) . "
				".$this->__f__fb78e2d9376d2321a5733e505cea5197($output,$tabs,$_activeNav)."			</ul>
		</div>
		<div class='ipsVerticalTabbed_content ipsLayout_content ipsBox_container' id='modcp_content'>
			<div class='ipsPad'>
				{$output}
			</div>
		</div>
	</div>
</div>
<script type='text/javascript'>
	$(\"modcp_content\").setStyle( { minHeight: $('modcp_tabs').measure('margin-box-height') + 5 + \"px\" } );
</script>";
return $IPBHTML;
}


function __f__fb78e2d9376d2321a5733e505cea5197($output, $tabs=array(), $_activeNav=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $tabs as $mainTabKey => $subTabs )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li id='{$mainTabKey}' class='" . (($_activeNav['primary'] == $mainTabKey) ? ("active ") : ("")) . "tab_toggle' data-tabid='{$mainTabKey}'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;fromapp={$subTabs[0][1]}&amp;tab={$subTabs[0][0]}", "public",'' ), "", "" ) . "'>{$this->lang->words['modcp_mtab_' . $mainTabKey ]}</a>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- subTabLoop --*/
function subTabLoop() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['subTabLoop'] ) )
{
$count_5a79681e0ce6b8a86b55200708fd5cad = is_array($this->functionData['subTabLoop']) ? count($this->functionData['subTabLoop']) : 0;
}
$IPBHTML .= "".$this->__f__6ab033fa2cc7d0137ddc24c896f07ef5()."";
return $IPBHTML;
}


function __f__5df173622a7c3aecb4ba5098006b13e4($mainTabKey='',$subTabs='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $subTabs as $sub )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<li" . (($this->templateVars['activeNav']['secondary'] == $sub[0]) ? (" class='active'") : ("")) . ">
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;fromapp={$sub[1]}&amp;tab={$sub[0]}", "public",'' ), "", "" ) . "'>
							{$this->lang->words['modcp_tab_' . $sub[0] ]}</a>
						</li>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__6ab033fa2cc7d0137ddc24c896f07ef5()
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->templateVars['tabs'] as $mainTabKey => $subTabs )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	" . (($mainTabKey == $this->templateVars['activeNav']['primary']) ? ("" . ((count( $subTabs ) > 1) ? ("
			<div class='maintitle ipsFilterbar clear'>
				<ul class='ipsList_inline'>									
					".$this->__f__5df173622a7c3aecb4ba5098006b13e4($mainTabKey,$subTabs)."				</ul>
			</div>
		") : ("")) . "") : ("")) . "

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- unapprovedPosts --*/
function unapprovedPosts($posts, $pagelinks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['unapprovedPosts'] ) )
{
$count_35a195d345305c2f66d1cd77463099a3 = is_array($this->functionData['unapprovedPosts']) ? count($this->functionData['unapprovedPosts']) : 0;
$this->functionData['unapprovedPosts'][$count_35a195d345305c2f66d1cd77463099a3]['posts'] = $posts;
$this->functionData['unapprovedPosts'][$count_35a195d345305c2f66d1cd77463099a3]['pagelinks'] = $pagelinks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
" . ((!$this->settings['disable_lightbox']) ? ("
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
<script type='text/javascript'>
	ipb.topic.inSection	= 'topicview';
</script>
<style type='text/css'>
	.post_mod { display: none; }
</style>
<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	" . ((is_array( $posts ) AND count( $posts )) ? ("
		<div id='ips_Posts2'>
			".$this->__f__05bc09de718967c461eb3c7d066f7214($posts,$pagelinks)."		</div>
	") : ("
		<div class='no_messages'>
			{$this->lang->words['no_unapproved_posts']}
		</div>
	")) . "
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}


function __f__05bc09de718967c461eb3c7d066f7214($posts, $pagelinks)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $posts as $post )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'modCPpost' ) ? $this->registry->getClass('output')->getTemplate('modcp')->modCPpost($post, array(), $post, 'unapproved') : '' ) . "
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- unapprovedTopics --*/
function unapprovedTopics($topics, $pagelinks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['unapprovedTopics'] ) )
{
$count_d1477ae01eeb64ea831aa9e6ffeb2fa9 = is_array($this->functionData['unapprovedTopics']) ? count($this->functionData['unapprovedTopics']) : 0;
$this->functionData['unapprovedTopics'][$count_d1477ae01eeb64ea831aa9e6ffeb2fa9]['topics'] = $topics;
$this->functionData['unapprovedTopics'][$count_d1477ae01eeb64ea831aa9e6ffeb2fa9]['pagelinks'] = $pagelinks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("forums", "0" ) . "
<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	<table class='ipb_table topic_list' id='forum_table'>
		" . ((is_array( $topics ) AND count( $topics )) ? ("
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'modCPtopic' ) ? $this->registry->getClass('output')->getTemplate('modcp')->modCPtopic($topics, $pagelinks, 'unapproved') : '' ) . "
		") : ("
			<tr> 
				<td colspan='3' class='no_messages'>{$this->lang->words['no_unapproved_topics']}</td>
			</tr>
		")) . "
	</table>
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}

/* -- warn_add_note_form --*/
function warn_add_note_form($member) {
$IPBHTML = "";
$IPBHTML .= "<form method=\"post\" action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;section=editmember&amp;do=save_note&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "\" id='postingform'>
	<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
	<input type='hidden' name='popup' value='{$this->request['popup']}' />
	<input type=\"hidden\" name=\"_st\" value=\"{$this->request['_st']}\" />
	<input type=\"hidden\" name=\"t\" value=\"{$this->request['t']}\" />
	<input type=\"hidden\" name=\"pf\" value=\"{$this->request['pf']}\" />
	<h3 class='ipsType_subtitle'>{$this->lang->words['mod_warn_new_note']} <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "\" title='{$this->lang->words['view_profile']}'>{$member['members_display_name']}</a></h3>

	<div class='post_form general_box'>
		<fieldset class='row1'>
			<h3>{$this->lang->words['mod_warn_fieldset']}</h3>
			<ul>
				<li class='field'>
					<textarea name='note' style='width: 95%; height:150px'>{$this->request['note']}</textarea>
				</li>
			</ul>
		</fieldset>
		<fieldset class='submit'>
			<input type='submit' class='input_submit' value='{$this->lang->words['mod_warn_note_save']}' />
		</fieldset>
	</div>
</form>";
return $IPBHTML;
}

/* -- warn_view_log --*/
function warn_view_log($member, $rows, $links='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['warn_view_log'] ) )
{
$count_dfa5d9914a3696197af219febafbc2a7 = is_array($this->functionData['warn_view_log']) ? count($this->functionData['warn_view_log']) : 0;
$this->functionData['warn_view_log'][$count_dfa5d9914a3696197af219febafbc2a7]['member'] = $member;
$this->functionData['warn_view_log'][$count_dfa5d9914a3696197af219febafbc2a7]['rows'] = $rows;
$this->functionData['warn_view_log'][$count_dfa5d9914a3696197af219febafbc2a7]['links'] = $links;
}

if ( ! isset( $this->registry->templateStriping['modlog'] ) ) {
$this->registry->templateStriping['modlog'] = array( FALSE, "row2","row1");
}
$IPBHTML .= "" . (($this->request['module']=='ajax') ? ("
		<h3>{$this->lang->words['w_v_title']}: <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$member['members_display_name']}</a></h3>
	") : ("
		<div class='general_box'><h3>{$this->lang->words['w_v_title']}: <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$member['members_display_name']}</a></h3>
	")) . "
	" . (($this->request['module']=='ajax') ? ("
		<div class='fixed_inner'>
	") : ("")) . "
		<table class='ipb_table'>
			<tr class='header'>
				<th scope='col'>{$this->lang->words['w_v_warnby']}</th>
				<th scope='col'>{$this->lang->words['w_v_notes']}</th>
			</tr>
			" . ((!is_array($rows) OR !count($rows)) ? ("
				<tr>
					<td class=\"no_messages\" colspan=\"2\">{$this->lang->words['w_v_none']}</td>
				</tr>
			") : ("
								".$this->__f__f0074fdd214e774e75a584ffded823fb($member,$rows,$links)."			")) . "
		</table>
" . ((!($this->request['module']=='ajax')) ? ("</div>") : ("")) . "
		<div class='ipsPad'>
			{$links}
		</div>
	" . (($this->request['module']=='ajax') ? ("
		</div>
		<div class='ipsForm_submit ipsForm_right'>
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;section=editmember&amp;mid={$member['member_id']}&amp;_tab=warn", "public",'' ), "", "" ) . "' class='ipsButton'><img src='{$this->settings['img_url']}/moderation_cog.png' /> &nbsp;{$this->lang->words['alter_warn_level']}</a>
		</div>
	") : ("")) . "";
return $IPBHTML;
}


function __f__f0074fdd214e774e75a584ffded823fb($member, $rows, $links='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<tr class='" .  IPSLib::next( $this->registry->templateStriping["modlog"] ) . "'>
						<td><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$r['punisher_id']}", "public",'' ), "{$r['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$r['punisher_name']}</strong></a></td>
						<td>{$this->lang->words['mod_warn_added']} <strong>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($r['wlog_date'],"long", 1)) . "</strong></td>
					</tr>
					<tr class='" .  IPSLib::next( $this->registry->templateStriping["modlog"] ) . "'>
						<td>
							<span class=\"" . (($r['wlog_type'] == 'note' OR $r['wlog_type'] == 'pos') ? ("positive") : ("negative")) . "\" " . (($r['wlog_type'] == 'note' || $r['wlog_type'] == 'nochan' || $r['wlog_type'] == 'custom') ? ("style='color:gray'") : ("")) . ">
								" . (($r['wlog_type'] == 'note') ? ("
									{$this->lang->words['mod_warn_note']}
								") : ("" . (($r['wlog_type'] == 'pos') ? ("
										{$this->lang->words['w_v_minus']}
									") : ("")) . "
									" . (($r['wlog_type'] == 'neg') ? ("
										{$this->lang->words['w_v_add']}
									") : ("")) . "
									" . (($r['wlog_type'] == 'nochan') ? ("
										{$this->lang->words['w_v_nochan']}
									") : ("")) . "
									" . (($r['wlog_type'] == 'custom') ? ("
										{$this->lang->words['w_v_custom']}
									") : ("")) . "")) . "
							</span>
						</td>
						<td>{$r['content']}</td>
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- warnForm --*/
function warnForm($member, $errors='', $modque=false, $postque=false, $ban=false, $editor_html='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['warnForm'] ) )
{
$count_1ae853627883e7cced3207de5517f2eb = is_array($this->functionData['warnForm']) ? count($this->functionData['warnForm']) : 0;
$this->functionData['warnForm'][$count_1ae853627883e7cced3207de5517f2eb]['member'] = $member;
$this->functionData['warnForm'][$count_1ae853627883e7cced3207de5517f2eb]['errors'] = $errors;
$this->functionData['warnForm'][$count_1ae853627883e7cced3207de5517f2eb]['modque'] = $modque;
$this->functionData['warnForm'][$count_1ae853627883e7cced3207de5517f2eb]['postque'] = $postque;
$this->functionData['warnForm'][$count_1ae853627883e7cced3207de5517f2eb]['ban'] = $ban;
$this->functionData['warnForm'][$count_1ae853627883e7cced3207de5517f2eb]['editor_html'] = $editor_html;
}

$mod_arr	= array( 'timespan' => 0, 'days' => 0, 'hours' => 0 );
			$mhours		= 0;
			
			if( $member['mod_posts'] > 0 AND $member['mod_posts'] != 1 )
			{
				$mod_arr	= IPSMember::processBanEntry( $member['mod_posts'] );
				
				if( $mod_arr['date_end'] > time() )
				{
					$mhours		= ceil( ( $mod_arr['date_end'] - time() ) / 3600 );
				}
			}

$post_arr	= array( 'timespan' => 0, 'hours' => 0, 'days' => 0 );
			$phours		= 0;
			
			if( $member['restrict_post'] > 0 AND $member['restrict_post'] != 1 )
			{
				$post_arr	= IPSMember::processBanEntry( $member['restrict_post'] );
				
				if( $post_arr['date_end'] > time() )
				{
					$phours		= ceil( ( $post_arr['date_end'] - time() ) / 3600 );
				}
			}

$ban_arr	= array( 'timespan' => 0, 'days' => 0, 'hours' => 0 );
			$hours		= 0;
			
			if( $member['temp_ban'] AND $member['temp_ban'] != 1 )
			{
				$ban_arr	= IPSMember::processBanEntry( $member['temp_ban'] );
				
				if( $ban_arr['date_end'] > time() )
				{
					$hours		= ceil( ( $ban_arr['date_end'] - time() ) / 3600 );
				}
			}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("profile", "0" ) . "
<script type='text/javascript'>
	ipb.profile.viewingProfile = {$member['member_id']};
</script>
" . (($errors) ? ("
	<h2>{$this->lang->words['errors_found']}</h2>
	<p class='message error'>{$errors}</p>
	<br />
") : ("")) . "
<form method=\"post\" action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;section=editmember&amp;do=dowarn&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "' id='postingform'>
<input type=\"hidden\" name=\"key\" value=\"{$this->member->form_hash}\" />
<input type=\"hidden\" name=\"type\" value=\"{$this->request['type']}\" />
<input type=\"hidden\" name=\"_st\" value=\"{$this->request['_st']}\" />
<input type=\"hidden\" name=\"t\" value=\"{$this->request['t']}\" />
<input type=\"hidden\" name=\"pf\" value=\"{$this->request['pf']}\" />
<div class='post_form'>
<h2 class='ipsType_subtitle'>{$this->lang->words['warn_logs_for']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$member['members_display_name']}</a></h2>
<div class='generic_bar'></div>
<div class='general_box'>
<fieldset class='with_subhead'>
	<h3 class='bar noTopBorder'>{$this->lang->words['warn_member_details']}</h3>
	<h4>
		<img class=\"ipsUserPhoto ipsUserPhoto_large\" src='{$member['pp_thumb_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$member['members_display_name']) . "\" />
	</h4>
	<ul>
		<li class='field'>
			" . $this->registry->getClass('output')->getReplacement("find_topics_link") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "'>{$this->lang->words['gbl_find_my_content']}</a>
		</li>
		" . (($this->memberData['g_mem_info'] && $this->settings['auth_allow_dnames']) ? ("
			<li class='field' id='dname_history'>
				" . $this->registry->getClass('output')->getReplacement("display_name") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=dname&amp;id={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_dname_history']}'>{$this->lang->words['display_history']}</a>
			</li>
		") : ("")) . "
		" . (($this->settings['reputation_enabled']) ? ("<li class='field'>
				" . (($member['pp_reputation_points'] > 0) ? ("
					<div class='reputation positive' style='min-width: 150px; text-align: center'>
				") : ("")) . "
				" . (($member['pp_reputation_points'] < 0) ? ("
					<div class='reputation negative' style='min-width: 150px; text-align: center'>
				") : ("")) . "
				" . (($member['pp_reputation_points'] == 0) ? ("
					<div class='reputation zero' style='min-width: 150px; text-align: center'>
				") : ("")) . "
					<span class='number'>{$member['pp_reputation_points']}</span>
					" . (($member['author_reputation'] && $member['author_reputation']['text']) ? ("
						<p class='title'>{$member['author_reputation']['text']}</p>
					") : ("")) . "
					" . (($member['author_reputation'] && $member['author_reputation']['image']) ? ("
						<p class='image'>{$member['author_reputation']['image']}</p>
					") : ("")) . "
				</div>
			</li>") : ("")) . "
	</ul>
</fieldset>
<fieldset class='with_subhead'>
	<h3 class='bar'>{$this->lang->words['warn_details']}</h3>
	<h4>{$this->lang->words['w_adjust_level']}<br /><span class='desc'>{$this->lang->words['warn_current_level']} {$member['warn_level']}/{$this->settings['warn_max']}</span></h4>
	<ul>
        <li class='field checkbox'>
            <input type=\"radio\" name=\"level\" id=\"nochange\" class=\"input_radio\" value=\"nochange\" " . (($this->request['type'] == 'nochange' OR !$this->request['type']) ? ("checked='checked'") : ("")) . " />
            <label for='nochange'>{$this->lang->words['w_nochange']}</label>
        </li>
		<li class='field checkbox negative'>
			<input type=\"radio\" name=\"level\" id=\"add\" class=\"input_radio\" value=\"add\" " . (($this->request['type'] == 'add') ? ("checked='checked'") : ("")) . " />
			<label for='add'>{$this->lang->words['w_add']}</label>
		</li>
		<li class='field checkbox positive'>
			<input type=\"radio\" name=\"level\" id=\"minus\" class=\"input_radio\" value=\"remove\" " . (($this->request['type'] == 'minus') ? ("checked='checked'") : ("")) . " />
			<label for='minus'>{$this->lang->words['w_remove']}</label>
		</li>	
		" . (($this->memberData['g_is_supmod']) ? ("<li class='field checkbox custom'>
				<input type=\"radio\" name=\"level\" id=\"custom\" class=\"input_radio\" value=\"custom\" " . (($this->request['type'] == 'custom') ? ("checked='checked'") : ("")) . " />
				<label for='level_custom'>" . sprintf( $this->lang->words['w_change_custom'], $this->settings['warn_max']) . "</label>
				 <input type='text' id='level_custom' name='level_custom' value='" . ((isset($this->request['customLevel'])) ? ("{$this->request['customLevel']}") : ("{$member['warn_level']}")) . "' size='3' />
			</li>") : ("")) . "	
	</ul>
	<h4>{$this->lang->words['w_reason']}<br /><span class='desc'>{$this->lang->words['w_reason2']}</span></h4>
	<ul>
		<li class='field'>
			<textarea rows=\"6\" cols=\"50\" class=\"input_text\" name=\"reason\">" . IPSText::br2nl( $this->request['reason'] ) . "</textarea>
		</li>
	</ul>
</fieldset>
<fieldset class='with_subhead'>
	<h3 class='bar'>{$this->lang->words['member_suspension']}</h3>
	" . (($modque == true) ? ("		<h4>{$this->lang->words['w_modq']}</h4>
		<ul>
			<li class='field checkbox'>
				<input class='input_check' id='modq' type=\"checkbox\" name=\"mod_indef\" value=\"1\" " . (($member['mod_posts'] == 1) ? ("checked='checked'") : ("")) . " />
				<label for='modq'>{$this->lang->words['w_modq_i']}</label>
			</li>
			<li class='field checkbox'>
				<label for='mod_value'>{$this->lang->words['w_orfor']}</label>
				<input class='input_text' type=\"text\" id='mod_value' name=\"mod_value\" value=\"" . (($mhours >= 24 and ( ($mhours / 24) == ceil($mhours / 24) ) and $timespan = ($mhours / 24)) ? ("{$timespan}") : ("{$mhours}")) . "\" size=\"5\" />&nbsp;
				<select name=\"mod_unit\" class='input_select'>
					<option value=\"d\" " . (($mhours >= 24 and ( ($mhours / 24) == ceil($mhours / 24) )) ? ("selected='selected'") : ("")) . ">{$this->lang->words['w_day']}</option>
					<option value=\"h\" " . (($mhours < 24 or ( ($mhours / 24) != ceil($mhours / 24) )) ? ("selected='selected'") : ("")) . ">{$this->lang->words['w_hour']}</option>
				</select>
				" . (($mhours > 0) ? ("
					<span class='desc'>{$this->lang->words['w_restricted']}</span>
				") : ("")) . "
			</li>
		</ul>") : ("")) . "
	" . (($postque == true) ? ("		<h4>{$this->lang->words['w_resposts']}</h4>
		<ul>
			<li class='field checkbox'>
				<input class='input_check' id='restrict_posts' type=\"checkbox\" name=\"post_indef\" value=\"1\" " . (($member['restrict_post'] == 1) ? ("checked='checked'") : ("")) . " />
				<label for='restrict_posts'>{$this->lang->words['w_resposts_i']}</label>
			</li>
			<li class='field checkbox'>
				<label for='post_value'>{$this->lang->words['w_orfor']}</label>
				<input class='input_text' type=\"text\" id='post_value' name=\"post_value\" value=\"" . (($phours >= 24 and ( ($phours / 24) == ceil($phours / 24) ) and $timespan = ($phours / 24)) ? ("{$timespan}") : ("{$phours}")) . "\" size=\"5\" />&nbsp;
				<select name=\"post_unit\" class='input_select'>
					<option value=\"d\" " . (($phours >= 24 and ( ($phours / 24) == ceil($phours / 24) )) ? ("selected='selected'") : ("")) . ">{$this->lang->words['w_day']}</option>
					<option value=\"h\" " . (($phours < 24 or ( ($phours / 24) != ceil($phours / 24) )) ? ("selected='selected'") : ("")) . ">{$this->lang->words['w_hour']}</option>
				</select>
				" . (($phours > 0) ? ("
					<span class='desc'>{$this->lang->words['w_restricted']}</span>
				") : ("")) . "
			</li>
		</ul>") : ("")) . "
	" . (($ban == true) ? ("		<h4>{$this->lang->words['w_suspend']}</h4>
		<ul>
			<li class='field checkbox'>
				<input class='input_check' id='suspend_member' type=\"checkbox\" name=\"ban_indef\" value=\"1\" " . (($member['member_banned'] == 1) ? ("checked='checked'") : ("")) . " />
				<label for='suspend_member'>{$this->lang->words['w_ban_indef']}</label>
			</li>
			<li class='field checkbox'>
				<label for='susp_value'>{$this->lang->words['w_suspend_or']}</label>
				<input type=\"text\" id='susp_value' class='input_text' name=\"susp_value\" value=\"" . (($hours >= 24 and ( ($hours / 24) == ceil($hours / 24) ) and $timespan = ($hours / 24)) ? ("{$timespan}") : ("{$hours}")) . "\" size=\"5\" />
				<select name=\"susp_unit\" class='input_select'>
					<option value=\"d\" " . (($hours >= 24 and ( ($hours / 24) == ceil($hours / 24) )) ? ("selected='selected'") : ("")) . ">{$this->lang->words['w_day']}</option>
					<option value=\"h\" " . (($hours < 24 or ( ($hours / 24) != ceil($hours / 24) )) ? ("selected='selected'") : ("")) . ">{$this->lang->words['w_hour']}</option>
				</select>
				" . (($member['temp_ban']) ? ("
					<span class='desc'>{$this->lang->words['w_restricted']}</span>
				") : ("")) . "
			</li>
		</ul>") : ("")) . "
</fieldset>
<fieldset class='with_subhead'>
	<h3 class='bar'>{$this->lang->words['warn_mem_content']}</h3>
	<h4>{$this->lang->words['warn_posts_topics']}</h4>
	<ul>
		<li class='field checkbox'>
			<select name=\"topicPosts_type\" class='input_select'>
				<option value='unapprove' " . (($this->request['topicPosts_type'] == 'unapprove') ? ("selected='selected'") : ("")) . ">{$this->lang->words['warn_stuff_unapprove']}</option>
				<option value='approve' " . (($this->request['topicPosts_type'] == 'approve') ? ("selected='selected'") : ("")) . ">{$this->lang->words['warn_stuff_approve']}</option>
			</select>
		</li>
		<li class='field checkbox'>
			<input type=\"checkbox\" id='topicPosts_topics' class='input_check' name=\"topicPosts_topics\" value=\"1\" />
			<label for='topicPosts_topics'>{$this->lang->words['warn_stuff_alltopics']}</label>
		</li>
		<li class='field checkbox'>
			<input type=\"checkbox\" id='topicPosts_replies' class='input_check' name=\"topicPosts_replies\" value=\"1\" />
			<label for='topicPosts_replies'>{$this->lang->words['warn_stuff_allposts']}</label>
		</li>
		<li class='field checkbox'>
			<label for='topicPosts_lastx'>{$this->lang->words['warn_stuff_datecutoff']}</label>
			<input type=\"text\" id='topicPosts_lastx' class='input_text' name=\"topicPosts_lastx\" value=\"\" size=\"5\" />
			<select name=\"topicPosts_lastxunits\" class='input_select'>
				<option value=\"d\">{$this->lang->words['w_day']}</option>
				<option value=\"h\">{$this->lang->words['w_hour']}</option>
			</select>
		</li>
	</ul>
</fieldset>
<fieldset>
	<h3 class='bar'>{$this->lang->words['warn_contact_member']}</h3>
	<ul>
		<li class='field'>
			<label for='subj'>{$this->lang->words['w_c_subj']}</label>
			<input id='subj' class='input_text' type=\"text\" name=\"subject\" value=\"{$this->request['subject']}\" size=\"30\" />
		</li>
		<li class='field'>
			<label for='method'>{$this->lang->words['w_c']}</label>
			<select id='method' name=\"contactmethod\" class='input_select'>
				" . (($member['members_disable_pm'] != 1) ? ("
					<option value=\"pm\">{$this->lang->words['w_c_p']}</option>
				") : ("")) . "
				<option value=\"email\">{$this->lang->words['w_c_e']}</option>
			</select>
		</li>
		<li class='ipsPad'>
			{$editor_html}
		</li>
	</ul>
</fieldset>
<fieldset class='submit'>
	<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['w_submit']}\" tabindex='0'/>
</fieldset>
</div>
</div>
</form>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>